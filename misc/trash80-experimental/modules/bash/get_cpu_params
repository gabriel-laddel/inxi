#!/bin/bash
# get CPU params and Core Count

get_cpu_params() # i.e. name, current speed, cache size, and Bogus MIPS
{
## check to see if infohash is run in cli or irc.
## The kernel does not support throttling of individual core frequencies(GHz).
## It can use each core as needed, but the frequencies(GHz) of each will match.
## Don't confuse usage(%) with frequency(GHz).
## Multi-core cpu's in flavors of 4,6,and 8 need only one line to show the core type and this will reduce the spam output
	## F is field separator, i.e ':', $NF (here) means the last field in the line
	gawk -F': ' '

	/^processor/        { processor_core_id = 0 } # when the kernel supports throttling of individual cores, this can change to $NR (num of records)

	/^model name/       { cpu[processor_core_id, "model"] = $NF }

	/^cpu MHz/          { cpu[processor_core_id, "speed"] = $NF/1000 } # divide by 1000 to get GHz

	/^cache size/       { cpu[processor_core_id, "cache"] = $NF }

	/^bogomips/         { cpu[processor_core_id, "bogomips"] = $NF }

	END {   ## rudementary support for printing the parameters of individual cores
				## until the linux kernel supports throttling individual cores on processors, this line will stay
				for (i = 0; i <= processor_core_id; i++)
				{
				print cpu[i, "model"] ": clocked @ " cpu[i, "speed"] " GHz: " cpu[i, "cache"] " cache each: " cpu[i, "bogomips"] " Bogomips"
				}
		}
	' /proc/cpuinfo
}

get_cpu_core_count()
{
## Because of the upcoming release of cpus with core counts over 6, a count of cores is given after Deca (10)
	cpu_core_count=$(grep -c "cpu cores" /proc/cpuinfo| cut -d':' -f2) # count the number of processors given

	if [[ $cpu_core_count -lt 2 ]]; then
		cpu_core_count=1
	fi

	case $cpu_core_count in # match the numberic value to an alpha value
		1) cpu_alpha_count="Single ";;
		2) cpu_alpha_count="Dual ";;
		3) cpu_alpha_count="Triple ";;
		4) cpu_alpha_count="Quad ";;
		5) cpu_alpha_count="Penta ";;
		6) cpu_alpha_count="Hexa ";;
		7) cpu_alpha_count="Hepta ";;
		8) cpu_alpha_count="Octa ";;
		9) cpu_alpha_count="Ennea ";;
		10) cpu_alpha_count="Deca ";;
		*) cpu_alpha_count="Multi ";;
	esac

	core_count="$cpu_alpha_count Core"
	echo $core_count
}

cpu_64_32_bit_check()
{
## look in /proc/cpuinfo "flags:" section for the flag "lm" which is the flag for 64bit processor
	bit_32_64=$(grep "flags" /proc/cpuinfo | grep -ic ' lm ')
	if [ $bit_32_64 -gt 0 ]; then
		bit_32_64="64 bit"
	else
		bit_32_64="32 bit"
	fi
	echo $bit_32_64
}

get_cpu_core_count
cpu_64_32_bit_check
get_cpu_params