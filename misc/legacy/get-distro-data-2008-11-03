#!/bin/bash

## return distro name/id if found
get_distro_data()
{
	local i='' distro='' distro_file='' a_distro_glob=''
	
	shopt -s nullglob
	cd /etc
	a_distro_glob=(*[-_]{release,version})
	cd "$OLDPWD"
	shopt -u nullglob
	
	if [ "${#a_distro_glob[@]}" -eq 1 ];then
		distro_file="${a_distro_glob}"
	elif [ "${#a_distro_glob[@]}" -gt 1 ];then
		for i in $DISTROS_DERIVED $DISTROS_PRIMARY
		do
			# Only echo works with ${var[@]}, not print_screen_output() or script_debugger()
			# This is a known bug, search for the word "strange" inside comments
			# echo "i='$i' a_distro_glob[@]='${a_distro_glob[@]}'"
			## note: this method only works with [[ brackets, not [. It's very hard to actually
			## use this, it should probably be made more explicit.
			if [[ " ${a_distro_glob[@]} " == *" $i "* ]];then
				distro_file="${i}"
				break
			fi
		done
	fi
	if [ -n "$distro_file" -a -s /etc/$distro_file -a " $DISTROS_EXCLUDE_LIST " != *" $distro_file "* ];then
		distro=$( remove_erroneous_chars "/etc/$distro_file" )
	# this is necessary because antiX doesn't use version/release in its distro id file name
	# so the glob tests fail. I expect those tests will need to be redone at some point to avoid this
	elif [ -e /etc/antiX ];then
		distro="$( egrep -oi 'antix.*\.iso' <<< $( remove_erroneous_chars '/etc/antiX' ) | sed 's/\.iso//' )"
	else
		# Debian pure should fall through here
		distro_file="issue"
		distro=$( gawk 'BEGIN { RS="" } { 	gsub(/\\[a-z]/,""); 
														gsub(/ [ ]+/," "); 
														gsub(/^ +| +$/,""); 
														print }' "/etc/${distro_file}" )
	fi
	if [ "${#distro}" -gt 80 -a "$B_HANDLE_CORRUPT_DATA" != 'true' ];then
		distro="${RED}/etc/${distro_file} corrupted, use -C to override${NORMAL}"
	fi
	## note: figure out a more readable way to achieve whatever is intended here ##
	: ${distro:=Unknown distro o_O}
	
	# this handles an arch bug where /etc/arch-release is empty and /etc/issue is corrupted
	if [ -n "$( grep -i 'arch linux' <<< $distro )" ];then
		distro='Arch Linux'
	fi
	echo "$distro"
}